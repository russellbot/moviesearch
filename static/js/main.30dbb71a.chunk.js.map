{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/Header.js","components/MainPage.js","containers/App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["Card","title","year","poster","id","className","alt","src","CardList","movies","map","user","i","key","imdbID","Title","Year","Poster","SearchBox","searchfield","searchChange","aria-label","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","Header","nextProps","nextState","MainPage","filterMovies","filter","movie","toLowerCase","includes","searchField","onRequestMovies","onSearchChange","isPending","App","connect","searchMovies","requestMovies","dispatch","event","payload","target","value","fetch","then","response","json","data","Search","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initialStateSearch","initialStateMovies","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.30dbb71a.chunk.js","sourcesContent":["import React from 'react';\r\n// import { shallow, mount, render } from 'enzyme';\r\n\r\nconst Card = ({ title, year, id, poster }) => {\r\n    return (\r\n        <div id='card' className='tc navy bg-yellow dib br3 pa3 ma2 grow bw2 shadow-5 mh2 h7'>\r\n            <img className='h5' alt='poster' src={poster} />\r\n            <div>\r\n                <h2 className='mw5 ph1 mh4'>{title}</h2>\r\n                <p>Year: {year}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ movies }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                movies.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i} \r\n                            id={movies[i].imdbID} \r\n                            title={movies[i].Title} \r\n                            year={movies[i].Year} \r\n                            poster={movies[i].Poster}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n        <input \r\n            aria-label='Search Movies'\r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search movies' \r\n            onChange={searchChange}\r\n        />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '780px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n  \r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\n// import CounterButton from './CounterButton';\r\n\r\nclass Header extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>                \r\n                <h1 className='f1'>star wars movie search</h1>\r\n                {/* <CounterButton color={'red'} /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport Header from '../components/Header';\r\nimport './MainPage.css';\r\n\r\nclass MainPage extends Component {   \r\n    componentDidMount() {\r\n        this.props.onRequestMovies();\r\n    }\r\n\r\n    filterMovies = () => {\r\n        return this.props.movies.filter(movie => {\r\n            return movie.Title.toLowerCase().includes(this.props.searchField.toLowerCase());\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { onSearchChange, isPending } = this.props;\r\n        return (\r\n                <div className = 'tc'>\r\n                    <Header />\r\n                    <SearchBox searchChange={onSearchChange} />\r\n                    <Scroll>\r\n                        { isPending ? <h1>Loading</h1> :\r\n                            <ErrorBoundry>\r\n                                <CardList movies={this.filterMovies()} />\r\n                            </ErrorBoundry>\r\n                        }\r\n                    </Scroll>\r\n                </div>\r\n            );        \r\n    }\r\n}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport { connect} from 'react-redux';\r\nimport MainPage from '../components/MainPage';\r\nimport './App.css';\r\n\r\nimport { setSearchField, requestMovies } from '../actions.js';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchField: state.searchMovies.searchField,\r\n        movies: state.requestMovies.movies,\r\n        isPending: state.requestMovies.isPending,\r\n        error: state.requestMovies.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n        onRequestMovies: () => dispatch(requestMovies())\r\n    }\r\n}\r\n\r\nclass App extends Component {      \r\n    render() {\r\n        return <MainPage { ...this.props } />\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { \r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_MOVIES_PENDING,\r\n    REQUEST_MOVIES_SUCCESS,\r\n    REQUEST_MOVIES_FAILED \r\n} from './constants.js';\r\n\r\nexport const setSearchField = (text) => ({\r\n        type: CHANGE_SEARCH_FIELD,\r\n        payload: text    \r\n})\r\n\r\nexport const requestMovies = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_MOVIES_PENDING});\r\n    fetch('https://www.omdbapi.com/?s=star+wars&apikey=469942e0')\r\n        .then(response=> response.json())\r\n        .then(data => dispatch({ type: REQUEST_MOVIES_SUCCESS, payload: data.Search }))\r\n        .catch(error => dispatch({ type: REQUEST_MOVIES_FAILED, payload: error }))\r\n}\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_MOVIES_PENDING = 'REQUEST_MOVIES_PENDING';\r\nexport const REQUEST_MOVIES_SUCCESS = 'REQUEST_MOVIES_SUCCESS';\r\nexport const REQUEST_MOVIES_FAILED = 'REQUEST_MOVIES_FAILED';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { \r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_MOVIES_PENDING,\r\n    REQUEST_MOVIES_SUCCESS,\r\n    REQUEST_MOVIES_FAILED \r\n} from './constants.js';\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchMovies = (state=initialStateSearch, action={}) => {\r\n    switch(action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, { searchField: action.payload });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateMovies = {\r\n    isPending: false,\r\n    movies: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestMovies = (state=initialStateMovies, action={}) => {\r\n    switch(action.type) {\r\n        case REQUEST_MOVIES_PENDING:\r\n            return Object.assign({}, state, { isPending: true })\r\n        case REQUEST_MOVIES_SUCCESS:\r\n            return Object.assign({}, state, { movies: action.payload, isPending: false })\r\n        case REQUEST_MOVIES_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPending: false })\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport { searchMovies, requestMovies } from './reducers';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ searchMovies, requestMovies })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}